wstawionych
		cnt = 0;
		std::uniform_int_distribution<> distr(0, m * z);
		
		start1 = std::chrono::high_resolution_clock::now();
		for (int i = m * z; i < m * z + 10000; i++) { hash_al_szukaj(tab, m, dane[distr(g)]); }
		stop1 = std::chrono::high_resolution_clock::now();
		czas1 = stop1 - start1;

		std::cout << czas1.count() / 10000.0 << ", " << cnt / 10000.0 << std::endl;

		//std::cout << "SZUKANIE" << std::endl;
		//std::cout << "Ilosc wywolan h: " << cnt << std::endl;
		//std::cout << "Srednie h dla szukania " << cnt / 10000.0 << std::endl;
		//std::cerr << "Szukano w: " << czas1.count()/ 10000.0 << "us" << std::endl << std::endl;

	}

	// d) Zmierz sredni czas wstawiania elementu oraz sredniÄ… liczbe wywolan funkcji mieszajacej przy wstawianiu elementu do tablicy wypelnionej w 10%, 20%, 30%, 40%, 50%, 60%, 70%, 80%, 90% (dla prĂłbki: 10000 elementĂłw).
	//UWAGA! Do tablicy mieszajacej nie wstawiac elementow, ktore juz w niej sa (wstawiane elementy nie mogÄ… siÄ™ powtarzaÄ‡).

	return 0;
}
